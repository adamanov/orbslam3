ekf_node:
  ros__parameters:
    # Here is how to use the following settings:
    # 1. Set the map_frame, odom_frame, and base_link frames to the appropriate frame names for your system.
    #     1a. If your system does not have a map_frame, just remove it, and make sure "world_frame" is set to the value of
    #         odom_frame.
    # 2. If you are fusing continuous position data such as wheel encoder odometry, visual odometry, or IMU data, set
    #   "world_frame" to your odom_frame value. This is the default behavior for robot_localization's state estimation nodes.
    # 3. If you are fusing global absolute position data that is subject to discrete jumps (e.g., GPS or position updates
    # from landmark observations) then:
    #     3a. Set your "world_frame" to your map_frame value
    #     3b. MAKE SURE something else is generating the odom->base_link transform. Note that this can even be another state
    #         estimation node from robot_localization! However, that instance should *not* fuse the global data.
    odom_frame: odom
    base_link_frame: base_link
    world_frame: odom   
    publish_tf: true
    two_d_mode: true
    frequency: 50.0
    
    odom0: camera_pose
    odom0_config: [true,  true,  false, 
                   false, false, true,  
                   true,  true,  false, 
                   false, false, true,
                   false, false, false]
    odom0_differential: false
    odom0_queue_size: 10
    odom0_relative: true

    # displacement 
    # angular rotation 
    # velocity 
    # angular velocity 
    # acceleration 
    imu0: rs_cam/imu
    imu0_config: [false, false, false,
                  true,  true,  true,
                  false, false, false,
                  true,  true,  true,
                  true,  true,  true]
    imu0_differential: false
    imu0_relative: true
    imu0_queue_size: 5